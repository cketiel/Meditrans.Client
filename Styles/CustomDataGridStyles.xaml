<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <!-- Style for the DataGrid -->
    <Style x:Key="CustomDataGridStyle" TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="Background" Value="{StaticResource OddRowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="GridLinesVisibility" Value="Vertical"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="materialDesign:DataGridAssist.CellPadding" Value="12,8,12,8"/>
        <Setter Property="materialDesign:DataGridAssist.ColumnHeaderPadding" Value="12,8,12,8"/>

    </Style>

    <!-- Style for column headers -->
    <Style x:Key="CustomColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="Background" Value="{StaticResource HeaderBackgroundBrush}"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="12,8,12,8"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>

        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>

    </Style>

    <!-- Style for rows -->
    <Style x:Key="CustomRowStyle" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">

        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="MaxHeight" Value="30"/>
        <Setter Property="Background" Value="{StaticResource EvenRowBackgroundBrush}"/>
        
        <Style.Triggers>

            
            <!-- Selection maintains the color but without border -->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            
            
            
            <!-- Hover has top priority -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="VerticalAlignment" Value="Center"/>

                <Setter Property="TextElement.FontWeight" Value="Bold"/>
            </Trigger>
            

        </Style.Triggers>
    </Style>

    <!-- Style for DataGrid cells -->
    <Style x:Key="CustomCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Setter Property="MaxHeight" Value="30"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Complete pre-configured style that combines all elements -->
    <Style x:Key="CustomDataGridStyles" TargetType="{x:Type DataGrid}" BasedOn="{StaticResource CustomDataGridStyle}">
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource CustomColumnHeaderStyle}"/>
        <Setter Property="RowStyle" Value="{StaticResource CustomRowStyle}"/>
        <Setter Property="CellStyle" Value="{StaticResource CustomCellStyle}"/>
    </Style>

</ResourceDictionary>