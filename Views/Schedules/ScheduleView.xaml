<UserControl x:Class="Meditrans.Client.Views.Schedules.ScheduleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Meditrans.Client.Views.Schedules"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:Meditrans.Client.Converters"
             xmlns:helpers="clr-namespace:Meditrans.Client.Helpers"  
             xmlns:models="clr-namespace:Meditrans.Client.Models"
             mc:Ignorable="d" 
             xmlns:vm="clr-namespace:Meditrans.Client.ViewModels"
             d:DataContext="{d:DesignInstance Type=vm:SchedulesViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <converters:ColumnVisibilityConverter x:Key="ColumnVisibilityConverter"/>
        <helpers:BindingProxy x:Key="vmProxy" Data="{Binding}" />
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <!-- FILAS PRINCIPALES -->
            <RowDefinition Height="Auto"/>         <!-- 0: Filters -->
            <RowDefinition Height="*"/>            <!-- 1: Top Panel (Schedules and Map) -->
            <RowDefinition Height="5"/>            <!-- 2: HORIZONTAL SPLITTER -->
            <RowDefinition Height="*"/>            <!-- 3: Bottom Panel (Unrouted Trips) -->
        </Grid.RowDefinitions>

        <!-- Top Filter Panel -->
        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="5">
            <DatePicker SelectedDate="{Binding SelectedDate}" Margin="5"/>
            <ComboBox ItemsSource="{Binding VehicleRoutes}" SelectedItem="{Binding SelectedVehicleRoute}" DisplayMemberPath="Name" Width="200" Margin="5"/>
            <ComboBox ItemsSource="{Binding VehicleGroups}" DisplayMemberPath="Name" Width="200" Margin="5"/>
            <!--<Button Content="Route Trip" Command="{Binding RouteTripCommand}" Margin="5"/>
            <Button Content="Cancel Route" Command="{Binding CancelRouteCommand}" Margin="5"/>-->
        </StackPanel>

        <!-- Top Panel Left (Schedules) and Right (Map) -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <!-- Columna 0: Schedule Grid -->
                <ColumnDefinition Width="*"/>

                <!-- Columna 1: Vertical Grid Splitter -->
                <ColumnDefinition Width="5"/>

                <!-- Columna 2: Map Area -->
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <DockPanel Grid.Column="0">
            <!-- Schedule Grid -->
            <ScrollViewer HorizontalScrollBarVisibility="Visible" >
            <DataGrid  
                      ItemsSource="{Binding Schedules}" 
                      SelectedItem="{Binding SelectedSchedule}" 
                      AutoGenerateColumns="False" 
                      CanUserAddRows="False"
                      SelectionMode="Single"
                      ScrollViewer.CanContentScroll="True" 
                      ScrollViewer.HorizontalScrollBarVisibility="Auto" 
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      FrozenColumnCount="2"               
                 
                      IsReadOnly="True"
                      AlternationCount="2"
                      AlternatingRowBackground="White"                                    
                      Style="{StaticResource CustomDataGridStyle}"
                      ColumnHeaderStyle="{StaticResource CustomColumnHeaderStyle}"
                      RowStyle="{StaticResource CustomRowStyle}"
                      CellStyle="{StaticResource CustomCellStyle}"
                      SelectionUnit="FullRow">                

                <DataGrid.Columns>

                    <DataGridTemplateColumn Width="Auto">

                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <Button Command="{Binding DataContext.OpenColumnSelectorCommand,
                                        RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                        Style="{StaticResource MaterialDesignToolButton}"
                                        ToolTip="{Binding Data.SelectFieldsToDisplayToolTip, Source={StaticResource vmProxy}}">
                                    <materialDesign:PackIcon Kind="Cog" Width="20" Height="20"/>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>

                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Command="{Binding Data.CancelRouteCommand, Source={StaticResource vmProxy}}"
                                        
                                        VerticalAlignment="Center"
                                        ToolTip="{Binding Data.UnscheduleToolTip, Source={StaticResource vmProxy}}">

                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignToolButton}">
                                                    <Style.Triggers>
                                                        <!-- Trigger to disable if name is "Pull-out" -->
                                                        <DataTrigger Binding="{Binding Name}" Value="Pull-out">
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>

                                                        <!-- Trigger to disable if name is "Pull-in" -->
                                                        <DataTrigger Binding="{Binding Name}" Value="Pull-in">
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>

                                            <materialDesign:PackIcon Kind="SortClockAscendingOutline" Width="20" Height="20" Foreground="{DynamicResource MaterialDesign.Brush.Primary}" />
                                    <!-- ArrowURightBottomBold -->
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>

                    </DataGridTemplateColumn>

                    <DataGridTextColumn Binding="{Binding Name}" Width="250" IsReadOnly="True" 
                                        Header="{Binding Data.ColumnHeaderName, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=Name}"/>

                    <DataGridTextColumn Binding="{Binding Pickup, StringFormat=\{0:hh\\:mm\}}" Width="80"
                                        Header="{Binding Data.ColumnHeaderPickup, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=Pickup}"/>
                    <DataGridTextColumn Binding="{Binding Appt, StringFormat=\{0:hh\\:mm\}}" Width="80"
                                        Header="{Binding Data.ColumnHeaderAppt, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=Appt}"/>
                    <DataGridTextColumn Binding="{Binding ETA, StringFormat=\{0:hh\\:mm\}}" Width="80" IsReadOnly="True"
                                        Header="{Binding Data.ColumnHeaderETA, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=ETA}"/>

                    <DataGridTemplateColumn Width="25" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <!-- A Grid is used to center and overlap elements -->
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">

                                    <!-- The circle that will change color -->
                                    <Border x:Name="CircleBorder"
                                        Width="20"
                                        Height="20"
                                        CornerRadius="10"
                                        Background="Gray">

                                        <!-- Content inside the circle -->
                                        <Grid>
                                            <TextBlock x:Name="SequenceText"
                                                        Text="{Binding Sequence}"
                                                        Foreground="White"
                                                        FontWeight="Bold"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"/>

                                            <!-- The car icon, hidden by default -->
                                            <materialDesign:PackIcon x:Name="CarIcon"
                                                    Kind="Car"
                                                    Width="18"
                                                    Height="18"
                                                    Foreground="White"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Visibility="Collapsed"/>
                                        </Grid>
                                    </Border>
                                </Grid>

                                <!-- Triggers to change appearance based on data -->
                                <DataTemplate.Triggers>
                                    <!-- CASE 1: Event is Pickup -->
                                    <DataTrigger Binding="{Binding EventType}" Value="{x:Static models:ScheduleEventType.Pickup}">
                                        <Setter TargetName="CircleBorder" Property="Background" Value="Green"/>
                                    </DataTrigger>

                                    <!-- CASE 2: Event is Dropoff -->
                                    <DataTrigger Binding="{Binding EventType}" Value="{x:Static models:ScheduleEventType.Dropoff}">
                                        <Setter TargetName="CircleBorder" Property="Background" Value="Red"/>
                                    </DataTrigger>

                                    <!-- SPECIAL CASE 3: Name is "Pull-out" -->
                                    <DataTrigger Binding="{Binding Name}" Value="Pull-out">
                                        <Setter TargetName="CircleBorder" Property="Background" Value="Green"/>
                                        <Setter TargetName="SequenceText" Property="Visibility" Value="Collapsed"/>
                                        <Setter TargetName="CarIcon" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                    <!-- SPECIAL CASE 4: Name is "Pull-in" -->
                                    <DataTrigger Binding="{Binding Name}" Value="Pull-in">
                                        <Setter TargetName="CircleBorder" Property="Background" Value="Red"/>
                                        <Setter TargetName="SequenceText" Property="Visibility" Value="Collapsed"/>
                                        <Setter TargetName="CarIcon" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Binding="{Binding Distance}" Width="80" IsReadOnly="True"
                                        Header="{Binding Data.ColumnHeaderDistance, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=Distance}"/>
                    <DataGridTextColumn Binding="{Binding Travel}" Width="80" IsReadOnly="True"
                                        Header="{Binding Data.ColumnHeaderTravel, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=Travel}"/>
                    <DataGridTextColumn Binding="{Binding On}" Width="50" IsReadOnly="True"
                                        Header="{Binding Data.ColumnHeaderOn, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=On}"/>
                    <DataGridTextColumn Binding="{Binding SpaceType}" Width="80"
                                        Header="{Binding Data.ColumnHeaderSpace, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=SpaceTypeName}"/>
                    <DataGridTextColumn Binding="{Binding Address}" Width="250"
                                        Header="{Binding Data.ColumnHeaderAddress, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=Address}"/>

                    <DataGridTextColumn Binding="{Binding Comment}" Width="200" IsReadOnly="True"
                                        Header="{Binding Data.ColumnHeaderComment, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=Comment}"/>
                    <DataGridTextColumn Binding="{Binding Phone}" Width="120" IsReadOnly="True"
                                        Header="{Binding Data.ColumnHeaderPhone, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=Phone}"/>
                    <DataGridTextColumn Binding="{Binding Arrive, StringFormat=\{0:hh\\:mm\}}" Width="80" IsReadOnly="True"
                                        Header="{Binding Data.ColumnHeaderArrive, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=Arrive}"/>
                    <DataGridTextColumn Binding="{Binding Perform, StringFormat=\{0:hh\\:mm\}}" Width="80" IsReadOnly="True"
                                        Header="{Binding Data.ColumnHeaderPerform, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=Perform}"/>
                    <DataGridTextColumn Binding="{Binding ArriveDist}" Width="80" IsReadOnly="True"
                                        Header="{Binding Data.ColumnHeaderArriveDist, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=ArriveDist}"/>
                    <DataGridTextColumn Binding="{Binding PerformDist}" Width="80" IsReadOnly="True"
                                        Header="{Binding Data.ColumnHeaderPerformDist, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=PerformDist}"/>
                    <DataGridTextColumn Binding="{Binding Driver}" Width="150" IsReadOnly="True"
                                        Header="{Binding Data.ColumnHeaderDriver, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=Driver}"/>
                    <DataGridTextColumn Binding="{Binding GPSArrive}" Width="120" IsReadOnly="True"
                                        Header="{Binding Data.ColumnHeaderGPSArrive, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=GPSArrive}"/>
                    <DataGridTextColumn Binding="{Binding Odometer}" Width="100" IsReadOnly="True"
                                        Header="{Binding Data.ColumnHeaderOdometer, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=Odometer}"/>
                    <DataGridTextColumn Binding="{Binding AuthNo}" Width="120" IsReadOnly="True"
                                        Header="{Binding Data.ColumnHeaderAuthNo, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=AuthNo}"/>

                    <DataGridTextColumn Binding="{Binding FundingSource}"
                                        Header="{Binding Data.ColumnHeaderFundingSource, Source={StaticResource vmProxy}}"
                                        Visibility="{Binding Data.ColumnConfigurations, Source={StaticResource vmProxy}, Converter={StaticResource ColumnVisibilityConverter}, ConverterParameter=FundingSource}"/>
                </DataGrid.Columns>
                            
            </DataGrid>
            </ScrollViewer>
            </DockPanel>

            <!-- VERTICAL GridSplitter -->
            <GridSplitter Grid.Column="1" 
                          Width="5" 
                          HorizontalAlignment="Stretch" 
                          VerticalAlignment="Stretch" 
                          Background="LightGray"
                          ShowsPreview="True"/>

            <!-- Placeholder for Map -->
            <Border Grid.Column="2" BorderBrush="Gray" BorderThickness="1" Margin="5">
                <TextBlock Text="Map Area" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
        </Grid>

        <!-- HORIZONTAL GridSplitter  -->
        <GridSplitter Grid.Row="2" 
                      Height="5" 
                      HorizontalAlignment="Stretch" 
                      VerticalAlignment="Center" 
                      Background="LightGray"
                      ShowsPreview="True"/>

        <!-- Lower Grid (Unscheduled Trips) -->
        <DataGrid Grid.Row="3" 
                  ItemsSource="{Binding UnscheduledTrips}" 
                  SelectedItem="{Binding SelectedUnscheduledTrip}"                                 
                  SelectionMode="Single"
                  ScrollViewer.CanContentScroll="True" 
                  ScrollViewer.HorizontalScrollBarVisibility="Auto" 
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  FrozenColumnCount="2"               
                 
                  IsReadOnly="True"
                  AlternationCount="2"
                  AlternatingRowBackground="White"                                    
                  Style="{StaticResource CustomDataGridStyle}"
                  ColumnHeaderStyle="{StaticResource CustomColumnHeaderStyle}"
                  RowStyle="{StaticResource CustomRowStyle}"
                  CellStyle="{StaticResource CustomCellStyle}"
                  SelectionUnit="FullRow"
                  
                  AutoGenerateColumns="False" CanUserAddRows="False" Cursor="Hand">
            <DataGrid.Columns>

                <DataGridTemplateColumn Width="Auto">

                    <!--<DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <Button Command="{Binding DataContext.OpenTripColumnSelectorCommand,
                                    RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                    Style="{StaticResource MaterialDesignToolButton}"
                                    >   
                                <materialDesign:PackIcon Kind="Cog" Width="20" Height="20"/>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>-->

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">

                                <Button Command="{Binding Data.CancelTripCommand, Source={StaticResource vmProxy}}"
                                        Style="{StaticResource MaterialDesignToolButton}"
                                        VerticalAlignment="Center"
                                        ToolTip="{Binding Data.CancelTripToolTip, Source={StaticResource vmProxy}}">
                                    <materialDesign:PackIcon Kind="CloseThick" Foreground="Red" Width="20" Height="20" />
                                </Button>

                                <Button Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                        CommandParameter="{Binding}"
                                        Style="{StaticResource MaterialDesignToolButton}"
                                        ToolTip="{Binding Data.EditTripToolTip, Source={StaticResource vmProxy}}">
                                    <materialDesign:PackIcon Kind="FileEdit" Foreground="Orange"/>
                                </Button>

                                <Button Command="{Binding DataContext.RouteTripCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                        CommandParameter="{Binding}"
                                        Style="{StaticResource MaterialDesignToolButton}"
                                        ToolTip="{Binding Data.ScheduleTripToolTip, Source={StaticResource vmProxy}}">
                                    <materialDesign:PackIcon Kind="SortClockDescending" Foreground="Green"/>
                                </Button>

                            </StackPanel>
                            
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                </DataGridTemplateColumn>
             
                <DataGridTextColumn Binding="{Binding Date}"
                Header="{Binding Data.ColumnHeaderDate, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding FromTime}"
                Header="{Binding Data.ColumnHeaderFromTime, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding ToTime}"
                Header="{Binding Data.ColumnHeaderToTime, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding NotificationStatus}"
                Header="{Binding Data.ColumnHeaderNotificationStatus, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding CustomerName}"
                Header="{Binding Data.ColumnHeaderPatient, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding PickupAddress}"
                Header="{Binding Data.ColumnHeaderPickupAddress, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding DropoffAddress}"
                Header="{Binding Data.ColumnHeaderDropoffAddress, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding Charge}"
                Header="{Binding Data.ColumnHeaderCharge, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding Paid}"
                Header="{Binding Data.ColumnHeaderPaid, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding SpaceType}"
                Header="{Binding Data.ColumnHeaderSpace, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding PickupComment}"
                Header="{Binding Data.ColumnHeaderPickupComment, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding DropoffComment}"
                Header="{Binding Data.ColumnHeaderDropoffComment, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding Type}"
                Header="{Binding Data.ColumnHeaderType, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding Pickup}"
                Header="{Binding Data.ColumnHeaderPickup, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding Dropoff}"
                Header="{Binding Data.ColumnHeaderDropoff, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding PickupPhone}"
                Header="{Binding Data.ColumnHeaderPickupPhone, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding DropoffPhone}"
                Header="{Binding Data.ColumnHeaderDropoffPhone, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding Authorization}"
                Header="{Binding Data.ColumnHeaderAuthorization, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding FundingSource}"
                Header="{Binding Data.ColumnHeaderFundingSource, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding Distance}"
                Header="{Binding Data.ColumnHeaderDistance, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding PickupCity}"
                Header="{Binding Data.ColumnHeaderPickupCity, Source={StaticResource vmProxy}}"/>

                <DataGridTextColumn Binding="{Binding DropoffCity}"
                Header="{Binding Data.ColumnHeaderDropoffCity, Source={StaticResource vmProxy}}"/>

                <!--<DataGridTextColumn Header="Customer" Binding="{Binding CustomerName}" Width="*"/>
                <DataGridTextColumn Header="From Time" Binding="{Binding FromTime, StringFormat=\{0:hh\\:mm\}}"/>
                <DataGridTextColumn Header="To Time" Binding="{Binding ToTime, StringFormat=\{0:hh\\:mm\}}"/>
                <DataGridTextColumn Header="Pickup Address" Binding="{Binding PickupAddress}" Width="*"/>
                <DataGridTextColumn Header="Dropoff Address" Binding="{Binding DropoffAddress}" Width="*"/>
                <DataGridTextColumn Header="Space" Binding="{Binding SpaceType}"/>
                <DataGridTextColumn Header="Funding Source" Binding="{Binding FundingSource}"/>-->
            </DataGrid.Columns>
        </DataGrid>
    </Grid>


</UserControl>
